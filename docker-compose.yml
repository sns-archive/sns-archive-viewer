services:
  frontend:
    container_name: sns-archive-viewer_frontend
    build:
      context: .
      dockerfile: ./infra/frontend/Dockerfile
    volumes:
      - ./frontend:/usr/src/app
      - ./frontend/node_modules:/usr/src/app/node_modules
    command: yarn dev -p 4000
    ports:
      - "4000:4000"
  backend:
    container_name: sns-archive-viewer_backend
    build:
      context: .
      dockerfile: ./infra/backend/Dockerfile
    volumes:
      - ./backend:/usr/src/app
    stdin_open: true
    tty: true
    env_file:
      - ./infra/env/backend.env
    ports:
      - 3000:3000
    command: sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    depends_on:
      db:
        condition: service_healthy
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: sns-archive-viewer_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # 開発用に認証を無効化
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl --silent --fail http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
  db:
    image: mysql:8.0
    platform: linux/amd64
    container_name: sns-archive-viewer_database
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db", "-u", "root", "-proot"]
      interval: 5s
      timeout: 10s
      retries: 5
volumes:
  db-data:
    driver: local
